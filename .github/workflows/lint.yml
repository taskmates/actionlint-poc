name: Lint

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    env:
      GH_TOKEN: ${{ secrets.ACTIONLINT_POC_GITHUB_TOKEN }}
      ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.ACTIONLINT_POC_GITHUB_TOKEN }}
      - name: Run actionlint
        id: actionlint
        uses: srizzo/actionlint@adjustments
        with:
          fail-on-error: false
      - name: Stop Github markers
        if: steps.actionlint.outputs.exit-code != 0
        run: |
          stopMarker=$(uuidgen)
          echo "::stop-commands::$stopMarker"
      - name: Install Taskmates
        if: steps.actionlint.outputs.exit-code != 0
        uses: taskmates/install-taskmates@v1
        with:
          version: main
      - name: Set up Taskmates
        if: steps.actionlint.outputs.exit-code != 0
        run: |
          export TASKMATES_HOME="${{ runner.temp }}/.taskmates"
          echo "TASKMATES_HOME=$TASKMATES_HOME" >> $GITHUB_ENV

      - name: Compose Chat
        if: steps.actionlint.outputs.exit-code != 0
        run: |
          export MARKDOWN_CHAT_PATH="${{ runner.temp }}/chat.md"
          echo "MARKDOWN_CHAT_PATH=$MARKDOWN_CHAT_PATH" >> $GITHUB_ENV
          
          cat <<EOF >> "$MARKDOWN_CHAT_PATH"
          Hey @linting_fixer, please fix the following issues: 
          
          "$ACTIONLINT_STDOUT"
          EOF
          
          cat "$MARKDOWN_CHAT_PATH"
        env:
          ACTIONLINT_STDOUT: ${{ steps.actionlint.outputs.stdout }}

      - name: Run Taskmates
        id: run_taskmates
        if: steps.actionlint.outputs.exit-code != 0
        run: |
          set -Eeuo pipefail
          
          echo "Running Taskmates..."
          
          cat "$MARKDOWN_CHAT_PATH" | taskmates complete \
              --model=gpt-4o \
              --max-steps=20 \
              --format full | tee "$RUNNER_TEMP/response.md"

          cp "$RUNNER_TEMP/response.md" "$MARKDOWN_CHAT_PATH"

      - name: Create PR
        if: steps.actionlint.outputs.exit-code != 0 && steps.run_taskmates.conclusion == 'success'
        env:
          GH_TOKEN: ${{ secrets.ACTIONLINT_POC_GITHUB_TOKEN }}
        run: |
          set -Eeuo pipefail 
          
          # Check for uncommitted changes in workflows
          if [[ -n $(git status --porcelain .github/workflows) ]]; then
            # Set branch name with timestamp, PR title, and PR body
            TIMESTAMP=$(date +"%Y%m%d-%H%M%S")
            BRANCH_NAME="taskmates-fix-workflow-linting-${TIMESTAMP}"
            PR_TITLE="Fix workflow linting issues"
            PR_BODY="This PR addresses linting issues in the GitHub Actions workflows."
          
            # Configure git
            git config user.name "GitHub Actions"
            git config user.email "actions@github.com"
          
            # Create and switch to the new branch
            git checkout -b $BRANCH_NAME
          
            # Add changes and commit
            git add .github/workflows
            git commit -m "Fix workflow linting issues"
          
            # Push the branch
            git push origin $BRANCH_NAME
          
            # Create the PR
            gh pr create --title "$PR_TITLE" --body "$PR_BODY" --base main --head $BRANCH_NAME
          else
            echo "No changes to workflows. Skipping PR creation."
          fi
